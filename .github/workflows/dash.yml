name: Transcode to DASH

on:
  workflow_dispatch:
    inputs:
      videoId:
        required: true
        description: UUID generated by Worker‑A

jobs:
  transcode:
    runs-on: ubuntu-latest

    env:
      BUCKET: classes
      ENDPOINT: https://classes.thecampus.in/
      AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      STATUS_URL: ${{ secrets.STATUS_WORKER_URL }}/update
      STATUS_TOKEN: ${{ secrets.STATUS_TOKEN }}      # bearer shared by Worker‑B

    steps:
    - name: Install ffmpeg & awscli
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg awscli jq bc

    - name: Download raw video from R2
      run: |
        aws --endpoint-url $ENDPOINT s3 cp s3://$BUCKET/raw/${{ github.event.inputs.videoId }}.mp4 input.mp4

    - name: Probe duration
      id: dur
      run: |
        DUR=$(ffprobe -v error -show_entries format=duration -of csv=p=0 input.mp4)
        echo "duration=$DUR" >> $GITHUB_OUTPUT

    - name: Transcode to DASH with live progress
      run: |
        ffmpeg -i input.mp4 \
          -c:v libx264 -preset fast -profile:v main -level 4.1 -b:v 3500k \
          -c:a aac -b:a 128k \
          -f dash -seg_duration 4 -remove_at_exit 0 \
          -init_seg_name init.m4s -media_seg_name chunk_$Number$.m4s \
          -y output.mpd -progress pipe:1 2>&1 | \
        while IFS== read k v; do
          if [[ $k == out_time_ms ]]; then
            pct=$(echo "($v/1000000)/${{ steps.dur.outputs.duration }}*100" | bc -l | xargs printf "%.0f")
            curl -s -X POST -H "Authorization: Bearer $STATUS_TOKEN" \
                 -H "Content-Type: application/json" \
                 -d "{\"videoId\":\"${{ github.event.inputs.videoId }}\",\"percent\":$pct}" \
                 $STATUS_URL > /dev/null
          fi
        done

    - name: Upload DASH set to R2
      run: |
        aws --endpoint-url $ENDPOINT s3 sync . s3://$BUCKET/dash/${{ github.event.inputs.videoId }}/ \
            --exclude "*" --include "*.mpd" --include "*.m4s"

    - name: Notify finished
      run: |
        curl -s -X POST -H "Authorization: Bearer $STATUS_TOKEN" \
             -H "Content-Type: application/json" \
             -d "{\"videoId\":\"${{ github.event.inputs.videoId }}\",\"percent\":100,\"done\":true,\"manifest\":\"https://cdn.thecampus.in/dash/${{ github.event.inputs.videoId }}/output.mpd\"}" \
             $STATUS_URL
